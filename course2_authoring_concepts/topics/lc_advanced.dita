<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE learningContent PUBLIC "-//OASIS//DTD DITA Learning Content//EN" "learningContent.dtd">
<learningContent id="content_hrm_xjh_1t">
    <title>Adding more advanced elements</title>
    <prolog>
        <author href="http://www.scriptorium.com" scope="external" format="html">Gretyl Kinsey,
            Scriptorium</author>
        <critdates>
            <created date="2015-08-24"/>
        </critdates>
    </prolog>
    <learningContentbody>
        <lcInstruction>
            <p>The &lt;codeblock> element is used to tag a piece of code. Typically, it is rendered
                in a monospace font in PDF or HTML output. Placing content inside the &lt;codeblock>
                element gives you control over line breaks.</p>
            <p>The &lt;codeph> element is used to display a single word or phrase inside a &lt;p> as
                code. For example, if you mention an element in a paragraph and want to display only
                that element's name in a monospace font, the &lt;codeph> element is useful.</p>
            <p>The &lt;lq> element is used for long quotations. This element is generally used for
                including a quote from an outside source in your content rather than (or in addition
                to) linking to the source.</p>
            <p>The &lt;section> element is used to divide the body of a topic into sub-sections with
                individual titles. If you find that you are adding many sections or sections of
                substantial length to a topic, consider making each of those sections into its own
                topic instead. The &lt;section> element cannot contain other &lt;section> elements
                and can only be followed by another &lt;section> element, an &lt;example> element,
                or a &lt;conbodydiv> element. DITA does not allow you to use main body elements such
                as &lt;p>, &lt;ul>, or &lt;note> after the end of a section.</p>
            <p>The &lt;draft-comment> element lets you insert comments and questions into the
                content while it is being developed. By default, the &lt;draft-comment> element is
                hidden in the final output, so you can render output without delete all draft
                comments. (You have to decide whether you're willing to risk it,
                    though!)<draft-comment author="Bill Swallow">"...without delete..." And, what
                    are they risking by using draft-comment if it's hidden in final output? I think
                    some context is missing, but for this level of training, I think it's safe to
                    assume default handling and NOT publishing comments.</draft-comment></p>
            <p>The &lt;required-cleanup> element lets you wrap content that is tagged incorrectly
                and needs to be fixed. By default, any content inside the &lt;required-cleanup>
                element is hidden in output.<draft-comment author="Bill Swallow">Not just tagged
                    incorrectly but content that is incorrect or otherwise not ready for publishing.
                    Kind of an insurance against publishing misinformation...</draft-comment></p>
        </lcInstruction>
    </learningContentbody>
    <task id="task_i3g_jkh_1t">
        <title/>
        <taskbody>
            <steps id="steps_f5k_kkh_1t">
                <step>
                    <cmd>Make a copy of the file 1_concept_advanced.dita and open it in your
                        editor.</cmd>
                    <info>
                        <note>If you are using a DITA-aware text editor, make sure you are in text
                            mode, rather than author or visual mode. </note>
                    </info>
                    <stepxmp>
                        <p>You should see this:</p>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;conbody>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                </step>
                <step>
                    <cmd>Inside the &lt;conbody> element, add the &lt;codeblock> element and
                        populate it as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;conbody>
<ph outputclass="newchanged">&lt;codeblock>
duckdata> add entry (mallard)
;
1 entry added (0.05 sec)
duckdata> _
&lt;/codeblock></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>The &lt;codeblock> element isolates the piece of code content so that any
                        tags in it exist for display purposes only and do not affect the DITA tags
                        in your concept topic file. The &lt;codeblock> element also allows you to
                        control line breaks. In the example you added, the text inside the
                        &lt;codeblock> element shows an entry being added to a database using the
                        command line.</info>
                </step>
                <step>
                    <cmd>After the &lt;codeblock> element, add a &lt;p> element with a &lt;codeph>
                        element inside it and populate it as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;conbody>
...
&lt;/codeblock>
<ph outputclass="newchanged">&lt;p>To add a duck species to your database, type &lt;codeph>add entry&lt;/codeph> followed by the name of
   the duck in parentheses on the command line and press Enter.&lt;/p></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>In the example you added, the &lt;codeph> element allows you to isolate
                        the words "add entry" and display them in a monospace font to indicate that
                        they are a command.</info>
                </step>
                <step>
                    <cmd>After the &lt;p> element, add a &lt;lq> element and populate it as shown in
                        the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;conbody>
...
&lt;/p>
<ph outputclass="newchanged">&lt;lq>How much fairer than the pool before the farmers door, in which his ducks swim! Hither the
   clean wild ducks come. Nature has no human inhabitant who appreciates her. The birds with their
   plumage and their notes are in harmony with the flowers, but what youth or maiden conspires with
   the wild luxuriant beauty of Nature?&lt;/lq></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>In the example you added, the &lt;lq> element allows you to include a
                        quote from Walden by Henry David Thoreau.<draft-comment author="okeefe"
                            >Doesn't lq also let you include a reference URL? Might add that
                            here...</draft-comment></info>
                </step>
                <step>
                    <cmd>After the &lt;lq> element, add a &lt;section> element as shown in the
                        following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;conbody>
...
&lt;/lq>
<ph outputclass="newchanged">&lt;section>
&lt;/section></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>In the example you added, you created a subsection of the ()
                            topic.<draft-comment author="okeefe">?? ()</draft-comment></info>
                </step>
                <step>
                    <cmd>Inside the &lt;section> element, add &lt;title> and &lt;p> elements and
                        populate them as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;conbody>
...
&lt;section>
<ph outputclass="newchanged">&lt;title>Sharing your duck database&lt;/title>
&lt;p>Export your duck database as HTML output to make it easy to share on your website. You can
    also offer your database to users as a download.&lt;/p></ph>
&lt;/section>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>DITA does not allow you to add another &lt;title> element inside the
                        &lt;concept> element where a title already exists. However, by adding a
                        &lt;section> element, you are essentially starting over with the &lt;title>
                        element and other main body elements that are allowed inside of a
                        concept.</info>
                    <info>
                        <draft-comment author="okeefe">reword the above to positive....only one
                            title is allowed...clarify the section sentence.</draft-comment>
                    </info>
                </step>
                <step>
                    <cmd>After the &lt;p> element in the new section, add a &lt;draft-comment>
                        element and populate it as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;conbody>
...
&lt;section>
&lt;title>Sharing your duck database&lt;/title>
&lt;p>Export your duck database as HTML output to make it easy to share on your website. You can
    also offer your database to users as a download.&lt;/p>
<ph outputclass="newchanged">&lt;draft-comment>Are you sure you want to offer a download?&lt;/draft-comment></ph>
&lt;/section>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>With the example you added, you are telling other authors who may work on
                        this topic that ().<draft-comment author="okeefe">??</draft-comment></info>
                </step>
                <step>
                    <cmd>After the &lt;section> element, add a &lt;required-cleanup> element and
                        populate it as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">

&lt;conbody>
...
&lt;section>
&lt;title>Sharing your duck database&lt;/title>
&lt;p>Export your duck database as HTML output to make it easy to share on your website. You can
    also offer your database to users as a download.&lt;/p>
&lt;draft-comment>Are you sure you want to offer a download?&lt;/draft-comment>
&lt;/section>
<ph outputclass="newchanged">&lt;required-cleanup>
&lt;p>Consider giving users the option to send feedback or suggested entries for your duck
    database.&lt;/p>
&lt;/required-cleanup></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>Because the &lt;p> element is not allowed after the &lt;section> element,
                        it should be surrounded with the &lt;required-cleanup> element to indicate
                        that it must be either moved to a valid position (such as inside the
                        section) or re-tagged with a valid element (such as the &lt;example>)
                        element in order for the text inside the &lt;p> to be displayed in the final
                            output.<draft-comment author="okeefe">reword. remove passive "is not
                            allowed" "should be surrounded" "must be moved"
                        etc.</draft-comment></info>
                </step>
            </steps>
        </taskbody>
    </task>
</learningContent>
