<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE learningContent PUBLIC "-//OASIS//DTD DITA Learning Content//EN" "learningContent.dtd">
<learningContent id="content_hrm_xjh_1t">
    <title>Adding more advanced elements</title>
    <prolog>
        <author href="http://www.scriptorium.com" scope="external" format="html">Gretyl Kinsey,
            Scriptorium</author>
        <critdates>
            <created date="2015-08-24"/>
        </critdates>
    </prolog>
    <learningContentbody>
        <lcInstruction>
            <p>DITA uses some important advanced elements:</p>
            <ul id="ul_kfg_3kq_dt">
                <li>
                    <p>&lt;codeblock>, or code block, which tags a piece of code. Typically, it is
                        rendered in a monospace font in PDF or HTML output. Placing content inside
                        the &lt;codeblock> element gives you control over line breaks.</p>
                </li>
                <li>
                    <p>&lt;codeph>, or code phrase, which displays a single word or phrase inside a
                        &lt;p> element as code. For example, if you mention an element in a
                        paragraph and want to display only that element’s name in a monospace font,
                        the &lt;codeph> element is useful.</p>
                </li>
                <li>
                    <p>&lt;lq>, or long quote, which contains long quotations. This element is for
                        including a quote from an outside source in your content rather than (or in
                        addition to) linking to the source.</p>
                </li>
                <li>
                    <p>&lt;section>, which divides the body of a topic into sub-sections with
                        individual titles. If you find that you are adding many sections or sections
                        of substantial length to a topic, consider making each of those sections
                        into its own topic instead. </p>
                    <p>The &lt;section> element can contain a &lt;title> element to give it a head,
                        along with most of the same elements allowed inside the &lt;conbody>
                        element. However, the &lt;section> element cannot contain other &lt;section>
                        elements and can only be followed by another &lt;section> element, an
                        &lt;example> element, or a &lt;conbodydiv> element. DITA does not allow you
                        to use main body elements such as the &lt;p>, &lt;ul>, or &lt;note>
                        elements, after the end of a section.</p>
                </li>
                <li>
                    <p>&lt;draft-comment>, which lets you insert comments and questions into the
                        content while it is being developed. By default, the &lt;draft-comment>
                        element is hidden in the final output, so you can render output without
                        deleting all draft comments. (You have to decide whether you’re willing to
                        risk it, though!)</p>
                </li>
                <li>
                    <p>&lt;required-cleanup>, which lets you wrap content that is tagged incorrectly
                        and needs to be fixed. By default, any content inside the
                        &lt;required-cleanup> element is hidden in output.</p>
                </li>
            </ul>
        </lcInstruction>
    </learningContentbody>
    <task id="task_i3g_jkh_1t">
        <title/>
        <taskbody>
            <steps id="steps_f5k_kkh_1t">
                <step>
                    <cmd>Make a copy of the file l_concept_advanced_start.dita and open it in your
                        editor.</cmd>
                    <info>
                        <note>If you are using a DITA-aware text editor, make sure you are in text
                            mode, rather than author or visual mode. </note>
                    </info>
                    <stepxmp>
                        <p>You should see this:</p>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;title>Writing about ducks&lt;/title>
&lt;conbody>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                </step>
                <step>
                    <cmd>Inside the &lt;conbody> element, add the &lt;codeblock> element and
                        populate it as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;title>Writing about ducks&lt;/title>
&lt;conbody>
<ph outputclass="newchanged">&lt;codeblock>
duckdata> add entry (mallard)
;
1 entry added (0.05 sec)
duckdata> _
&lt;/codeblock></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>The &lt;codeblock> element isolates the piece of code content so that any
                        tags in it exist for display purposes only and do not affect the DITA tags
                        in your concept topic file. </info>
                    <info>The &lt;codeblock> element also allows you to control line breaks. In the
                        example you added, the text inside the &lt;codeblock> element shows an entry
                        being added to a database using the command line.</info>
                    <info>Video: <xref href="https://www.youtube.com/watch?v=Ryzutuy-n_A"
                            format="html" scope="external">Creating a codeblock in
                        DITA</xref></info>
                </step>
                <step>
                    <cmd>After the &lt;codeblock> element, add a &lt;p> element with a &lt;codeph>
                        element inside it and populate it as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;title>Writing about ducks&lt;/title>
&lt;conbody>
...
&lt;/codeblock>
<ph outputclass="newchanged">&lt;p>To add a duck species to your database, type &lt;codeph>add entry&lt;/codeph> followed by 
the name of the duck in parentheses on the command line and press Enter.&lt;/p></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>In the example you added, the &lt;codeph> element allows you to isolate
                        the words “add entry” and indicate that they should be displayed in a
                        monospace font to show that they are a command.</info>
                </step>
                <step>
                    <cmd>After the &lt;p> element, add a &lt;lq> element and populate it as shown in
                        the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;title>Writing about ducks&lt;/title>
&lt;conbody>
...
&lt;/p>
<ph outputclass="newchanged">&lt;lq href="http://classiclit.about.com/library/bl-etexts/hdthoreau/bl-hdtho-wald-9.htm" 
format="html" scope="external">How much fairer than the pool before the farmers door, 
in which his ducks swim! Hither the clean wild ducks come. Nature has no human 
inhabitant who appreciates her. The birds with their plumage and their notes are in 
harmony with the flowers, but what youth or maiden conspires with the wild luxuriant 
beauty of Nature?&lt;/lq></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>In the example you added, the &lt;lq> element allows you to include a
                        quote from <cite>Walden</cite> by Henry David Thoreau.</info>
                    <info>The &lt;lq> element can contain a link to the quote’s source. In the
                        example you added, the &lt;lq> element contains an href attribute pointing
                        to the source URL, a format attribute indicating that the source is HTML,
                        and a scope attribute showing that the source is external.</info>
                </step>
                <step>
                    <cmd>After the &lt;lq> element, add a &lt;section> element as shown in the
                        following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;title>Writing about ducks&lt;/title>
&lt;conbody>
...
&lt;/lq>
<ph outputclass="newchanged">&lt;section>
&lt;/section></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>In the example you added, you created a subsection of the “Writing about
                        ducks” topic.</info>
                </step>
                <step>
                    <cmd>Inside the &lt;section> element, add &lt;title> and &lt;p> elements and
                        populate them as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;title>Writing about ducks&lt;/title>
&lt;conbody>
...
&lt;section>
<ph outputclass="newchanged">&lt;title>Sharing your duck database&lt;/title>
&lt;p>Export your duck database as HTML output to make it easy to share on your website. 
You can also offer your database to users as a download.&lt;/p></ph>
&lt;/section>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>Only one &lt;title> element is allowed inside the &lt;concept> element
                        where a title already exists. However, by adding a &lt;section> element, you
                        are able to have multiple subtitles in your concept topic. Like the
                        &lt;conbody> element, each &lt;section> element can only contain one
                        &lt;title> element.</info>
                    <info>A &lt;section> element can contain all the same body elements as a
                        &lt;conbody>, with the exception of another &lt;section> (that is, you
                        cannot nest &lt;section> elements inside each other).</info>
                    <info>Video: <xref href="https://www.youtube.com/watch?v=kmwUK7UFL_8"
                            format="html" scope="external">Adding a section in DITA</xref></info>
                </step>
                <step>
                    <cmd>After the &lt;p> element in the new section, add a &lt;draft-comment>
                        element and populate it as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">
&lt;conbody>
...
&lt;section>
&lt;title>Sharing your duck database&lt;/title>
&lt;p>Export your duck database as HTML output to make it easy to share on your website. 
You can also offer your database to users as a download.&lt;/p>
<ph outputclass="newchanged">&lt;draft-comment>Are you sure you want to offer a download?&lt;/draft-comment></ph>
&lt;/section>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>In the example you added, you are telling other authors who may work on
                        this topic to rethink the decision to offer a download.</info>
                </step>
                <step>
                    <cmd>After the &lt;section> element, add a &lt;required-cleanup> element and
                        populate it as shown in the following example:</cmd>
                    <stepxmp>
                        <pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
&lt;concept id="concept_advanced">

&lt;conbody>
...
&lt;section>
&lt;title>Sharing your duck database&lt;/title>
&lt;p>Export your duck database as HTML output to make it easy to share on your website. 
You can also offer your database to users as a download.&lt;/p>
&lt;draft-comment>Are you sure you want to offer a download?&lt;/draft-comment>
&lt;/section>
<ph outputclass="newchanged">&lt;required-cleanup>
&lt;p>Consider giving users the option to send feedback or suggested entries for your 
duck database.&lt;/p>
&lt;/required-cleanup></ph>
&lt;/conbody>
&lt;/concept></pre>
                    </stepxmp>
                    <info>In this example, you have surrounded the &lt;p> element with the
                        &lt;required-cleanup> element to indicate that someone must move it to a
                        valid position (such as inside the &lt;section> element) or re-tag it with a
                        valid element (such as the &lt;example> element). Otherwise, the final
                        output will not display the text inside the &lt;p> element.</info>
                </step>
                <step>
                    <cmd>Check your file l_concept_advanced_start.dita against the sample file
                        l_concept_advanced.dita.</cmd>
                </step>
            </steps>
        </taskbody>
    </task>
    <task id="task_as2_vjx_dt">
        <title>Exercise</title>
        <taskbody>
            <steps id="steps_g32_wjx_dt">
                <step>
                    <cmd>Open the file l_concept_advanced_exercise_start.dita and use it to convert
                        the following untagged content into DITA:</cmd>
                    <info><image href="../media/advanced/exercise_4.png" id="image_yd5_2b2_2t" base="2015/08"
                        /></info>
                </step>
                <step>
                    <cmd>Check your file l_concept_advanced_start.dita against the sample file
                        l_concept_advanced_exercise.dita.</cmd>
                </step>
            </steps>
        </taskbody>
    </task>
</learningContent>
