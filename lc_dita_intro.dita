<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE learningContent PUBLIC "-//OASIS//DTD DITA Learning Content//EN" "learningContent.dtd">
<learningContent id="content_gxd_rry_5r">
    <title>What is DITA?</title>
    <shortdesc></shortdesc>
    <learningContentbody>
        <lcInstruction>
            <draft-comment author="Bill Swallow">A harmless change to test branching and commit to master.</draft-comment>
           <draft-comment author="asp">And yet another comment to test.</draft-comment>
            <p>DITA stands for the DITA Information Typing Architecture. It is an open standard
                originally created by IBM. In 2005, IBM donated DITA to <xref
                    href="https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dita"
                    format="html" scope="external">OASIS</xref>.</p>
            <p>DITA is an XML-based, tool-independent way to create, organize, and manage content.
                DITA is built on:<ul id="ul_dwl_1ty_5r">
                    <li>Topic-based authoring</li>
                    <li>Separating content from formatting</li>
                    <li>Minimalism</li>
                    <li>Structured authoring concepts</li>
                </ul>The fact that DITA is an open, XML-based standard means that it is relatively
                easy to move from one tool to another as business needs change. </p>
        </lcInstruction>
        <section>
            <title>Markup languages</title>
            <p>The most commonly used markup language is HTML. XML is similar to HTML; it also uses
                angle brackets to indicate elements (like &lt;p>). Many of the tags in DITA XML are
                also found in HTML.</p>
            <p>In XML, you must be careful to open and close all tags properly. HTML is forgiving
                when you make mistakes. XML requires you to provide a file that is tagged correctly;
                if you make any error in the encoding, parsing will stop. This is known as draconian
                error handling, and it is a controversial part of the XML specification.</p>
            <p>DITA is a markup language and is a flavor of XML. DITA allows you to mark up content
                semantically; the tag markup tells the author about the meaning of the markup.</p>
            <p>
                <object id="video1" data="assets/htmlversusxml.swf"
                    type="application/x-shockwave-flash" width="350" height="100"> 
                    <desc>Insert lesson 3 video from 3:18 to 5:18 here. Overview of HTML markup versus DITA markup</desc>
                    <param name="movie" value="assets/htmlversusxml.swf"/> 
                    <param name="quality" value="high"/> 
                   
                 </object>
            </p>
        </section>
        <section>
            <title>DITA is structured authoring</title>
            <p>DITA enforces structure and standard for an authoring environment. Typically, an
                information architecture will set up the overall environment.</p>
            <p>Content has implicit structure, even in a word processor. DITA models and enforces
                that structure explicitly. For example, a task topic must have at least one step.
                The result is that all task topics are structured consistently. </p>
        </section>
        <section>
            <title>What is a DITA topic?</title>
            <p>A DITA topic is a container in which you create content. Topics can be:<ul
                    id="ul_egh_cxy_5r">
                    <li>Constrained. More limited than what the DITA standard allows by
                        default.</li>
                    <li>Specialized. Include additional elements beyond what’s provided in the
                        standard.</li>
                </ul></p>
            <p>Content and topics have elements. Elements are the tags for the content. The tags
                available to a specific author depend on how that author’s environment is set up by
                the information architect. For example, if you are not writing in a software
                environment and don’t need code samples, your information architect could constrain
                your DITA environemnt to eliminate the code-related element.</p>
            <p>Elements have attributes. An attribute provides additional information about the
                element. For example, a topic might have an attribute called author, in which you
                specify who created a particular topic.</p>
     
        </section>
    </learningContentbody>
    <related-links>
        <link href="http://dita.xml.org/book/export/html/1047" scope="external" format="html">
            <linktext>History of DITA</linktext>
        </link>
        <link href="http://www.w3.org/html/wg/wiki/DraconianErrorHandling" format="html" scope="external"><linktext>Draconian error handling</linktext></link>
        <link href="http://www.scriptorium.com/2013/07/the-ten-commandments-of-dita/" format="html" scope="external"><linktext>The ten commandments of DITA, Scriptorium blog</linktext></link>
        <link href="http://www.oxygenxml.com/dita/styleguide/webhelp-feedback/#Artefact/c_Syntax_and_Markup.html" format="html" scope="external">
            <linktext>DITA Style Guide, Chapter 3, Syntax and Markup</linktext>
        </link>
    </related-links>
</learningContent>
